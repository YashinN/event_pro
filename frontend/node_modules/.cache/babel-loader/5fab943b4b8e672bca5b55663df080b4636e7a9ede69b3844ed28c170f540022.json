{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/event_pro/frontend/src/components/EventCard.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n// modal component\nimport MessageModal from \"./MessageModal\";\n// component css\nimport \"./EventCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventCard = props => {\n  _s();\n  // toggles state to show message modal\n  const [showModal, setShowModal] = useState(false);\n  // sets loading state when making api calls.\n  const [loading, setLoading] = useState(null);\n\n  // request to server to save and event to My events or user events.\n  const saveRequest = async () => {\n    // sets loading state while waiting for response.\n    setLoading(true);\n    // makes request with user email as identifier in req params\n    // sends event id to derver in body.\n    const response = await fetch(process.env.REACT_APP_MYEVENTS + props.isUser.email, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${props.isUser.token}`\n      },\n      body: JSON.stringify({\n        id: props.event._id\n      })\n    });\n\n    // recevies user saved event data from server\n    const data = await response.json();\n\n    // if successful response\n    if (response.ok) {\n      // toggles off loading state.\n      setLoading(null);\n      // stores recevied user events\n      // props.setIsUser(data);\n      props.setMyEvents(data.allUserEvents);\n      openModal();\n    }\n    setLoading(null);\n  };\n\n  // onclick request to save user event.\n  const handleSave = () => {\n    saveRequest();\n  };\n\n  // opens message modal on successful save\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  // closes message modal on click.\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-md-6 col-lg-6 col-xl-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container event-card px-0 ${props.colour}`,\n      children: [props.isUser && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-primary mark-btn btn\",\n        onClick: handleSave,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this) : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.event.image,\n        alt: \"\",\n        className: \"event-card-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" p-3 \",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2\",\n          children: props.event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2\",\n          children: [\"Date:\", props.event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2\",\n          children: [\"Venue:\", props.event.venue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2\",\n          children: [\"Time:\", props.event.startTime, \" - \", props.event.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      showModal: showModal,\n      closeModal: closeModal,\n      message: \"Event has been saved!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCard, \"Mat50bD3DU1RWeCJY0Khgpm9JAs=\");\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["useState","MessageModal","jsxDEV","_jsxDEV","EventCard","props","_s","showModal","setShowModal","loading","setLoading","saveRequest","response","fetch","process","env","REACT_APP_MYEVENTS","isUser","email","method","headers","Authorization","token","body","JSON","stringify","id","event","_id","data","json","ok","setMyEvents","allUserEvents","openModal","handleSave","closeModal","className","children","colour","type","onClick","role","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","description","date","venue","startTime","endTime","message","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/event_pro/frontend/src/components/EventCard.js"],"sourcesContent":["import { useState } from \"react\";\n// modal component\nimport MessageModal from \"./MessageModal\";\n// component css\nimport \"./EventCard.css\";\n\nconst EventCard = (props) => {\n  // toggles state to show message modal\n  const [showModal, setShowModal] = useState(false);\n  // sets loading state when making api calls.\n  const [loading, setLoading] = useState(null);\n\n  // request to server to save and event to My events or user events.\n  const saveRequest = async () => {\n    // sets loading state while waiting for response.\n    setLoading(true);\n    // makes request with user email as identifier in req params\n    // sends event id to derver in body.\n    const response = await fetch(\n      process.env.REACT_APP_MYEVENTS + props.isUser.email,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${props.isUser.token}`,\n        },\n        body: JSON.stringify({ id: props.event._id }),\n      }\n    );\n\n    // recevies user saved event data from server\n    const data = await response.json();\n\n    // if successful response\n    if (response.ok) {\n      // toggles off loading state.\n      setLoading(null);\n      // stores recevied user events\n      // props.setIsUser(data);\n      props.setMyEvents(data.allUserEvents);\n\n      openModal();\n    }\n    setLoading(null);\n  };\n\n  // onclick request to save user event.\n  const handleSave = () => {\n    saveRequest();\n  };\n\n  // opens message modal on successful save\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  // closes message modal on click.\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div className=\"col-12 col-md-6 col-lg-6 col-xl-4\">\n      <div className={`container event-card px-0 ${props.colour}`}>\n        {props.isUser && (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary mark-btn btn\"\n            onClick={handleSave}\n          >\n            {loading ? (\n              <div className=\"loading-container\">\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>\n              </div>\n            ) : (\n              \"Save\"\n            )}\n          </button>\n        )}\n\n        <img src={props.event.image} alt=\"\" className=\"event-card-img\" />\n\n        <div className=\" p-3 \">\n          <h5 className=\"mb-2\">{props.event.description}</h5>\n          <h5 className=\"mb-2\">Date:{props.event.date}</h5>\n          <h5 className=\"mb-2\">Venue:{props.event.venue}</h5>\n          <h5 className=\"mb-2\">\n            Time:{props.event.startTime} - {props.event.endTime}\n          </h5>\n        </div>\n      </div>\n      <MessageModal\n        showModal={showModal}\n        closeModal={closeModal}\n        message={\"Event has been saved!\"}\n      />\n    </div>\n  );\n};\n\nexport default EventCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}