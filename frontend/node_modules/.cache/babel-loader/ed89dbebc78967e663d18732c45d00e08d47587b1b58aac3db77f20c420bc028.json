{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/event_pro/frontend/src/pages/EditEventPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport EditEventCard from \"../components/EditEventCard\";\nimport FilterComponent from \"../components/FilterComponent\";\nimport MessageModal from \"../components/MessageModal\";\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEventPage = props => {\n  _s();\n  const [entity, setEntity] = useState(\"All\");\n  const [month, setMonth] = useState(1);\n  const [filterData, setFilterData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const getMonth = date => {\n    if (!date) {\n      return null;\n    }\n    const splitDate = date.split(\"-\");\n    return Number(splitDate[1]);\n  };\n  const filterDate = (currentMonth, events) => {\n    const filterItems = events.filter(event => getMonth(event.date) === currentMonth);\n    return filterItems;\n  };\n\n  // sets entity or type of media when radio fields are selected.\n  const entityHandler = e => {\n    // sets entity type eg. movie, ebook ect to be searched.\n    setEntity(e.target.id);\n    const {\n      month\n    } = e.target.dataset;\n    setMonth(month);\n    const data = filterDate(Number(month), props.events);\n    setFilterData(data);\n  };\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container-fluid section-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container events-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Manage Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterComponent, {\n        entity: entity,\n        entityHandler: entityHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-5 sec-title\",\n        children: [entity, \" Events\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), props.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row gy-5\",\n        children: [entity === \"All\" && props.events.map((event, index) => /*#__PURE__*/_jsxDEV(EditEventCard, {\n          event: event,\n          setEvents: props.setEvents,\n          openModal: openModal,\n          colour: index % 2 === 0 ? \"color-2\" : \"color-3\",\n          filterDate: filterDate,\n          month: month,\n          setFilterData: setFilterData,\n          user: props.user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)), entity !== \"All\" && filterData.map((event, index) => /*#__PURE__*/_jsxDEV(EditEventCard, {\n          event: event,\n          setEvents: props.setEvents,\n          filterDate: filterDate,\n          month: month,\n          setFilterData: setFilterData,\n          openModal: openModal,\n          colour: index % 2 === 0 ? \"color-2\" : \"color-3\",\n          user: props.user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)), props.events.length === 0 && entity === \"All\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-info\",\n          children: \"No Events ....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), filterData.length === 0 && entity !== \"All\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-info\",\n          children: [\"No Events in \", entity, \" ....\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageModal, {\n      showModal: showModal,\n      closeModal: closeModal,\n      message: \"Event has been removed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(EditEventPage, \"6RG3GL8N71l7eLzq40eEeG4/EkE=\");\n_c = EditEventPage;\nexport default EditEventPage;\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["useState","EditEventCard","FilterComponent","MessageModal","jsxDEV","_jsxDEV","EditEventPage","props","_s","entity","setEntity","month","setMonth","filterData","setFilterData","showModal","setShowModal","getMonth","date","splitDate","split","Number","filterDate","currentMonth","events","filterItems","filter","event","entityHandler","e","target","id","dataset","data","openModal","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","role","map","index","setEvents","colour","user","length","message","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/event_pro/frontend/src/pages/EditEventPage.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport EditEventCard from \"../components/EditEventCard\";\nimport FilterComponent from \"../components/FilterComponent\";\nimport MessageModal from \"../components/MessageModal\";\n\nimport \"./HomePage.css\";\n\nconst EditEventPage = (props) => {\n  const [entity, setEntity] = useState(\"All\");\n  const [month, setMonth] = useState(1);\n  const [filterData, setFilterData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const getMonth = (date) => {\n    if (!date) {\n      return null;\n    }\n    const splitDate = date.split(\"-\");\n    return Number(splitDate[1]);\n  };\n\n  const filterDate = (currentMonth, events) => {\n    const filterItems = events.filter(\n      (event) => getMonth(event.date) === currentMonth\n    );\n    return filterItems;\n  };\n\n  // sets entity or type of media when radio fields are selected.\n  const entityHandler = (e) => {\n    // sets entity type eg. movie, ebook ect to be searched.\n    setEntity(e.target.id);\n    const { month } = e.target.dataset;\n    setMonth(month);\n    const data = filterDate(Number(month), props.events);\n    setFilterData(data);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <section className=\"container-fluid section-wrapper\">\n      <div className=\"container events-wrapper\">\n        <h1 className=\"main-title\">Manage Events</h1>\n        <FilterComponent entity={entity} entityHandler={entityHandler} />\n        <h2 className=\"mb-5 sec-title\">{entity} Events</h2>\n\n        {props.loading ? (\n          <div className=\"loading-container\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <span>Loading...</span>\n          </div>\n        ) : (\n          <div className=\"row gy-5\">\n            {entity === \"All\" &&\n              props.events.map((event, index) => (\n                <EditEventCard\n                  event={event}\n                  setEvents={props.setEvents}\n                  openModal={openModal}\n                  colour={index % 2 === 0 ? \"color-2\" : \"color-3\"}\n                  key={index}\n                  filterDate={filterDate}\n                  month={month}\n                  setFilterData={setFilterData}\n                  user={props.user}\n                />\n              ))}\n            {entity !== \"All\" &&\n              filterData.map((event, index) => (\n                <EditEventCard\n                  event={event}\n                  setEvents={props.setEvents}\n                  filterDate={filterDate}\n                  month={month}\n                  setFilterData={setFilterData}\n                  openModal={openModal}\n                  colour={index % 2 === 0 ? \"color-2\" : \"color-3\"}\n                  key={index}\n                  user={props.user}\n                />\n              ))}\n            {props.events.length === 0 && entity === \"All\" && (\n              <h2 className=\"text-info\">No Events ....</h2>\n            )}\n            {filterData.length === 0 && entity !== \"All\" && (\n              <h2 className=\"text-info\">No Events in {entity} ....</h2>\n            )}\n          </div>\n        )}\n      </div>\n      <MessageModal\n        showModal={showModal}\n        closeModal={closeModal}\n        message={\"Event has been removed!\"}\n      />\n    </section>\n  );\n};\n\nexport default EditEventPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}