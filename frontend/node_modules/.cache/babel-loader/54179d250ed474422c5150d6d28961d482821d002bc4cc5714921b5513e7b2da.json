{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/event_pro/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport googleIcon from \"../images/google.png\";\nimport githubIcon from \"../images/github.png\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = props => {\n  _s();\n  const [switchForm, setSwitchForm] = useState(\"Log In\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emptyFields, setEmptyFields] = useState([]);\n  const [error, setError] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(null);\n  const navigate = useNavigate();\n  const google = () => {\n    window.open(process.env.REACT_APP_GOOGLE_SUCCESS, \"_self\");\n  };\n  const github = () => {\n    window.open(process.env.REACT_APP_GITHUB_SUCCESS, \"_self\");\n  };\n\n  // clears states to default.\n  const clearStates = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setEmptyFields([]);\n    setError(null);\n  };\n\n  // makes request to server sends user credentials\n  const loginRequest = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_LOGIN, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // recieves auth token and user email from db\n      const data = await response.json();\n\n      // if res not ok sets error and recevies list of empty inputs from server.\n      if (!response.ok) {\n        // sets empty fields.\n        setEmptyFields(data.emptyFields);\n        setError(data.error);\n      }\n\n      // if res ok.\n      if (response.ok) {\n        // sets empty fields to default.\n        setEmptyFields([]);\n        // resets error.\n        setError(null);\n        // stores user token and email in local storage.\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        // sets login state.\n        props.setLoggedIn(true);\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // request to create new user in db.\n  const signupRequest = async () => {\n    try {\n      // post req with user email and password.\n      const response = await fetch(process.env.REACT_APP_SIGNIN, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // receives user email and auth token.\n      const data = await response.json();\n      if (!response.ok) {\n        // sets empty fields to default.\n        setEmptyFields(data.emptyFields);\n        // sets error.\n        setError(data.error);\n      }\n      if (response.ok) {\n        setEmptyFields([]);\n        setError(null);\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        props.setLoggedIn(true);\n        navigate(\"/\");\n      }\n    } catch (eror) {\n      console.log(error);\n    }\n  };\n\n  // login button clicked, makes call to login request.\n  const handleLogin = () => {\n    loginRequest();\n  };\n\n  // sign up button clicked makes request to sign up user.\n  const handleSignUp = () => {\n    signupRequest();\n  };\n  const handleMenu = e => {\n    if (switchForm === \"Log In\") {\n      setSwitchForm(\"Sign Up\");\n    } else {\n      setSwitchForm(\"Log In\");\n    }\n    clearStates();\n  };\n  useEffect(() => {\n    if (email === \"admin@gmail.com\" && isAdmin) {\n      loginRequest();\n    }\n  }, [email]);\n  const demoAdmin = () => {\n    setIsAdmin(true);\n    setEmail(\"admin@gmail.com\");\n    setPassword(\"admin@123456\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container login-container p-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 login-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mb-0\",\n              children: switchForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger bm-0\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: `form-control ${emptyFields.includes(\"email\") ? \"is-invalid\" : \"\"}`,\n              id: \"email\",\n              placeholder: \"name@example.com\",\n              onChange: e => setEmail(e.target.value),\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: `form-control ${emptyFields.includes(\"password\") ? \"is-invalid\" : \"\"}`,\n              id: \"password\",\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value),\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-primary auth-btn btn mb-2\",\n            onClick: google,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-btn-container\",\n              children: [\"Google \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: googleIcon,\n                alt: \"\",\n                className: \"auth-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-primary auth-btn\",\n            onClick: github,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-btn-container\",\n              children: [\"Github \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: githubIcon,\n                alt: \"\",\n                className: \"auth-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 login-btns\",\n            children: [switchForm === \"Log In\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), switchForm === \"Sign Up\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleSignUp,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-switch\",\n              onClick: handleMenu,\n              children: switchForm === \"Log In\" ? \"Sign Up\" : \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-info admin-btn\",\n              onClick: demoAdmin,\n              children: \"Demo Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"KQvGIAy+fTG8IvouUhqAUnjRj4U=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useEffect","useNavigate","googleIcon","githubIcon","jsxDEV","_jsxDEV","LoginPage","props","_s","switchForm","setSwitchForm","email","setEmail","password","setPassword","emptyFields","setEmptyFields","error","setError","isAdmin","setIsAdmin","navigate","google","window","open","process","env","REACT_APP_GOOGLE_SUCCESS","github","REACT_APP_GITHUB_SUCCESS","clearStates","loginRequest","response","fetch","REACT_APP_LOGIN","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","setLoggedIn","console","log","signupRequest","REACT_APP_SIGNIN","eror","handleLogin","handleSignUp","handleMenu","e","demoAdmin","className","children","action","fileName","_jsxFileName","lineNumber","columnNumber","type","includes","id","placeholder","onChange","target","value","htmlFor","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/event_pro/frontend/src/pages/LoginPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport googleIcon from \"../images/google.png\";\nimport githubIcon from \"../images/github.png\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = (props) => {\n  const [switchForm, setSwitchForm] = useState(\"Log In\");\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  const [error, setError] = useState(null);\n\n  const [isAdmin, setIsAdmin] = useState(null);\n\n  const navigate = useNavigate();\n\n  const google = () => {\n    window.open(process.env.REACT_APP_GOOGLE_SUCCESS, \"_self\");\n  };\n\n  const github = () => {\n    window.open(process.env.REACT_APP_GITHUB_SUCCESS, \"_self\");\n  };\n\n  // clears states to default.\n  const clearStates = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setEmptyFields([]);\n    setError(null);\n  };\n\n  // makes request to server sends user credentials\n  const loginRequest = async () => {\n    try {\n      const response = await fetch(process.env.REACT_APP_LOGIN, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      // recieves auth token and user email from db\n      const data = await response.json();\n\n      // if res not ok sets error and recevies list of empty inputs from server.\n      if (!response.ok) {\n        // sets empty fields.\n        setEmptyFields(data.emptyFields);\n        setError(data.error);\n      }\n\n      // if res ok.\n      if (response.ok) {\n        // sets empty fields to default.\n        setEmptyFields([]);\n        // resets error.\n        setError(null);\n        // stores user token and email in local storage.\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        // sets login state.\n        props.setLoggedIn(true);\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // request to create new user in db.\n  const signupRequest = async () => {\n    try {\n      // post req with user email and password.\n      const response = await fetch(process.env.REACT_APP_SIGNIN, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      // receives user email and auth token.\n      const data = await response.json();\n\n      if (!response.ok) {\n        // sets empty fields to default.\n        setEmptyFields(data.emptyFields);\n        // sets error.\n        setError(data.error);\n      }\n\n      if (response.ok) {\n        setEmptyFields([]);\n        setError(null);\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        props.setLoggedIn(true);\n        navigate(\"/\");\n      }\n    } catch (eror) {\n      console.log(error);\n    }\n  };\n\n  // login button clicked, makes call to login request.\n  const handleLogin = () => {\n    loginRequest();\n  };\n\n  // sign up button clicked makes request to sign up user.\n  const handleSignUp = () => {\n    signupRequest();\n  };\n\n  const handleMenu = (e) => {\n    if (switchForm === \"Log In\") {\n      setSwitchForm(\"Sign Up\");\n    } else {\n      setSwitchForm(\"Log In\");\n    }\n\n    clearStates();\n  };\n\n  useEffect(() => {\n    if (email === \"admin@gmail.com\" && isAdmin) {\n      loginRequest();\n    }\n  }, [email]);\n\n  const demoAdmin = () => {\n    setIsAdmin(true);\n    setEmail(\"admin@gmail.com\");\n    setPassword(\"admin@123456\");\n  };\n\n  return (\n    <section className=\"container\">\n      <div className=\"container login-container p-5\">\n        <form action=\"\">\n          <div className=\"form-group\">\n            <div className=\"mb-4 login-title-container\">\n              <h2 className=\"mb-0\">{switchForm}</h2>\n              {error && <p className=\"text-danger bm-0\">{error}</p>}\n            </div>\n\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"email\"\n                className={`form-control ${\n                  emptyFields.includes(\"email\") ? \"is-invalid\" : \"\"\n                }`}\n                id=\"email\"\n                placeholder=\"name@example.com\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n              <label htmlFor=\"email\">Email address</label>\n            </div>\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"password\"\n                className={`form-control ${\n                  emptyFields.includes(\"password\") ? \"is-invalid\" : \"\"\n                }`}\n                id=\"password\"\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n              />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary auth-btn btn mb-2\"\n              onClick={google}\n            >\n              <span className=\"auth-btn-container\">\n                Google <img src={googleIcon} alt=\"\" className=\"auth-icon\" />\n              </span>\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary auth-btn\"\n              onClick={github}\n            >\n              <span className=\"auth-btn-container\">\n                Github <img src={githubIcon} alt=\"\" className=\"auth-icon\" />\n              </span>\n            </button>\n\n            <div className=\"mt-4 login-btns\">\n              {switchForm === \"Log In\" && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={handleLogin}\n                >\n                  Login\n                </button>\n              )}\n\n              {switchForm === \"Sign Up\" && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={handleSignUp}\n                >\n                  Sign Up\n                </button>\n              )}\n\n              <button type=\"button\" className=\"btn-switch\" onClick={handleMenu}>\n                {switchForm === \"Log In\" ? \"Sign Up\" : \"Log In\"}\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-info admin-btn\"\n                onClick={demoAdmin}\n              >\n                Demo Admin\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}